// Generated by view binder compiler. Do not edit!
package com.aisportspt.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aisportspt.app.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTrainingPlanBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final LinearLayout aiBadge;

  @NonNull
  public final MaterialButton btnStartTraining;

  @NonNull
  public final TextView textDifficulty;

  @NonNull
  public final TextView textDuration;

  @NonNull
  public final TextView textExerciseCount;

  @NonNull
  public final TextView textFocus;

  @NonNull
  public final TextView textPlanName;

  @NonNull
  public final TextView textPlanSport;

  private ItemTrainingPlanBinding(@NonNull MaterialCardView rootView, @NonNull LinearLayout aiBadge,
      @NonNull MaterialButton btnStartTraining, @NonNull TextView textDifficulty,
      @NonNull TextView textDuration, @NonNull TextView textExerciseCount,
      @NonNull TextView textFocus, @NonNull TextView textPlanName,
      @NonNull TextView textPlanSport) {
    this.rootView = rootView;
    this.aiBadge = aiBadge;
    this.btnStartTraining = btnStartTraining;
    this.textDifficulty = textDifficulty;
    this.textDuration = textDuration;
    this.textExerciseCount = textExerciseCount;
    this.textFocus = textFocus;
    this.textPlanName = textPlanName;
    this.textPlanSport = textPlanSport;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTrainingPlanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTrainingPlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_training_plan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTrainingPlanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ai_badge;
      LinearLayout aiBadge = ViewBindings.findChildViewById(rootView, id);
      if (aiBadge == null) {
        break missingId;
      }

      id = R.id.btn_start_training;
      MaterialButton btnStartTraining = ViewBindings.findChildViewById(rootView, id);
      if (btnStartTraining == null) {
        break missingId;
      }

      id = R.id.text_difficulty;
      TextView textDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (textDifficulty == null) {
        break missingId;
      }

      id = R.id.text_duration;
      TextView textDuration = ViewBindings.findChildViewById(rootView, id);
      if (textDuration == null) {
        break missingId;
      }

      id = R.id.text_exercise_count;
      TextView textExerciseCount = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseCount == null) {
        break missingId;
      }

      id = R.id.text_focus;
      TextView textFocus = ViewBindings.findChildViewById(rootView, id);
      if (textFocus == null) {
        break missingId;
      }

      id = R.id.text_plan_name;
      TextView textPlanName = ViewBindings.findChildViewById(rootView, id);
      if (textPlanName == null) {
        break missingId;
      }

      id = R.id.text_plan_sport;
      TextView textPlanSport = ViewBindings.findChildViewById(rootView, id);
      if (textPlanSport == null) {
        break missingId;
      }

      return new ItemTrainingPlanBinding((MaterialCardView) rootView, aiBadge, btnStartTraining,
          textDifficulty, textDuration, textExerciseCount, textFocus, textPlanName, textPlanSport);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
