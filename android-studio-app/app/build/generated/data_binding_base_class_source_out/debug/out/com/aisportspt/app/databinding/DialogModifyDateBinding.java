// Generated by view binder compiler. Do not edit!
package com.aisportspt.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.DatePicker;
import android.widget.ImageButton;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aisportspt.app.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogModifyDateBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageButton btnBackDate;

  @NonNull
  public final MaterialButton btnNextDate;

  @NonNull
  public final DatePicker datePickerModify;

  @NonNull
  public final TextView tvCurrentDate;

  private DialogModifyDateBinding(@NonNull ScrollView rootView, @NonNull ImageButton btnBackDate,
      @NonNull MaterialButton btnNextDate, @NonNull DatePicker datePickerModify,
      @NonNull TextView tvCurrentDate) {
    this.rootView = rootView;
    this.btnBackDate = btnBackDate;
    this.btnNextDate = btnNextDate;
    this.datePickerModify = datePickerModify;
    this.tvCurrentDate = tvCurrentDate;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogModifyDateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogModifyDateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_modify_date, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogModifyDateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back_date;
      ImageButton btnBackDate = ViewBindings.findChildViewById(rootView, id);
      if (btnBackDate == null) {
        break missingId;
      }

      id = R.id.btn_next_date;
      MaterialButton btnNextDate = ViewBindings.findChildViewById(rootView, id);
      if (btnNextDate == null) {
        break missingId;
      }

      id = R.id.date_picker_modify;
      DatePicker datePickerModify = ViewBindings.findChildViewById(rootView, id);
      if (datePickerModify == null) {
        break missingId;
      }

      id = R.id.tv_current_date;
      TextView tvCurrentDate = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentDate == null) {
        break missingId;
      }

      return new DialogModifyDateBinding((ScrollView) rootView, btnBackDate, btnNextDate,
          datePickerModify, tvCurrentDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
