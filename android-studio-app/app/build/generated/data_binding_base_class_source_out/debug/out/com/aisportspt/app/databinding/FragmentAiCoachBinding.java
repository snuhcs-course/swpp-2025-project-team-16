// Generated by view binder compiler. Do not edit!
package com.aisportspt.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aisportspt.app.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAiCoachBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout aiGuideArea;

  @NonNull
  public final MaterialButton btnFlipCamera;

  @NonNull
  public final MaterialButton btnReset;

  @NonNull
  public final MaterialButton btnStartAnalysis;

  @NonNull
  public final PreviewView cameraPreview;

  @NonNull
  public final LinearLayout emptyFeedbackLayout;

  @NonNull
  public final LinearLayout phaseIndicator;

  @NonNull
  public final ProgressBar progressScore;

  @NonNull
  public final LinearLayout recordingIndicator;

  @NonNull
  public final Spinner spinnerSport;

  @NonNull
  public final TextView textAccuracyPercent;

  @NonNull
  public final TextView textCurrentPhase;

  @NonNull
  public final TextView textScore;

  private FragmentAiCoachBinding(@NonNull LinearLayout rootView, @NonNull FrameLayout aiGuideArea,
      @NonNull MaterialButton btnFlipCamera, @NonNull MaterialButton btnReset,
      @NonNull MaterialButton btnStartAnalysis, @NonNull PreviewView cameraPreview,
      @NonNull LinearLayout emptyFeedbackLayout, @NonNull LinearLayout phaseIndicator,
      @NonNull ProgressBar progressScore, @NonNull LinearLayout recordingIndicator,
      @NonNull Spinner spinnerSport, @NonNull TextView textAccuracyPercent,
      @NonNull TextView textCurrentPhase, @NonNull TextView textScore) {
    this.rootView = rootView;
    this.aiGuideArea = aiGuideArea;
    this.btnFlipCamera = btnFlipCamera;
    this.btnReset = btnReset;
    this.btnStartAnalysis = btnStartAnalysis;
    this.cameraPreview = cameraPreview;
    this.emptyFeedbackLayout = emptyFeedbackLayout;
    this.phaseIndicator = phaseIndicator;
    this.progressScore = progressScore;
    this.recordingIndicator = recordingIndicator;
    this.spinnerSport = spinnerSport;
    this.textAccuracyPercent = textAccuracyPercent;
    this.textCurrentPhase = textCurrentPhase;
    this.textScore = textScore;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAiCoachBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAiCoachBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ai_coach, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAiCoachBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ai_guide_area;
      FrameLayout aiGuideArea = ViewBindings.findChildViewById(rootView, id);
      if (aiGuideArea == null) {
        break missingId;
      }

      id = R.id.btn_flip_camera;
      MaterialButton btnFlipCamera = ViewBindings.findChildViewById(rootView, id);
      if (btnFlipCamera == null) {
        break missingId;
      }

      id = R.id.btn_reset;
      MaterialButton btnReset = ViewBindings.findChildViewById(rootView, id);
      if (btnReset == null) {
        break missingId;
      }

      id = R.id.btn_start_analysis;
      MaterialButton btnStartAnalysis = ViewBindings.findChildViewById(rootView, id);
      if (btnStartAnalysis == null) {
        break missingId;
      }

      id = R.id.camera_preview;
      PreviewView cameraPreview = ViewBindings.findChildViewById(rootView, id);
      if (cameraPreview == null) {
        break missingId;
      }

      id = R.id.empty_feedback_layout;
      LinearLayout emptyFeedbackLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyFeedbackLayout == null) {
        break missingId;
      }

      id = R.id.phase_indicator;
      LinearLayout phaseIndicator = ViewBindings.findChildViewById(rootView, id);
      if (phaseIndicator == null) {
        break missingId;
      }

      id = R.id.progress_score;
      ProgressBar progressScore = ViewBindings.findChildViewById(rootView, id);
      if (progressScore == null) {
        break missingId;
      }

      id = R.id.recording_indicator;
      LinearLayout recordingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (recordingIndicator == null) {
        break missingId;
      }

      id = R.id.spinner_sport;
      Spinner spinnerSport = ViewBindings.findChildViewById(rootView, id);
      if (spinnerSport == null) {
        break missingId;
      }

      id = R.id.text_accuracy_percent;
      TextView textAccuracyPercent = ViewBindings.findChildViewById(rootView, id);
      if (textAccuracyPercent == null) {
        break missingId;
      }

      id = R.id.text_current_phase;
      TextView textCurrentPhase = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentPhase == null) {
        break missingId;
      }

      id = R.id.text_score;
      TextView textScore = ViewBindings.findChildViewById(rootView, id);
      if (textScore == null) {
        break missingId;
      }

      return new FragmentAiCoachBinding((LinearLayout) rootView, aiGuideArea, btnFlipCamera,
          btnReset, btnStartAnalysis, cameraPreview, emptyFeedbackLayout, phaseIndicator,
          progressScore, recordingIndicator, spinnerSport, textAccuracyPercent, textCurrentPhase,
          textScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
